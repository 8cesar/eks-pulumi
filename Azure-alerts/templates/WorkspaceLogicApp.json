{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "ConnectionName": {
      "type": "string"
    },
    "ConnectionDisplayName": {
      "type": "string"
    },
    "ConnectiontokenTenantId": {
      "type": "string",
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application"
      }
    },
    "alertGroupRegr": {
      "type": "string"
    },
    "omsWorkspaceName": {
      "type": "string",
      "defaultValue": "dev-workspace-gfx"
    },
    "omsSolutionName": {
      "type": "string",
      "defaultValue": "LogicAppsManagement"
    }
  },
  "variables": {
    "omsWorkspaceResourceId": "[resourceId(subscription().subscriptionId, parameters('alertGroupRegr'), 'Microsoft.OperationalInsights/workspaces', parameters('omsWorkspaceName'))]"
  },
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "tags": {
        "status": "active",
        "costcenter": "shared",
        "project": "shared",
        "team": "devops"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "type": "Foreach",
              "foreach": "@triggerBody()?['body']?['data']?['context']?['condition']?['allOf']",
              "actions": {
                "Condition": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@triggerBody()?['body']?['schemaId']",
                          "AzureMonitorMetricAlert"
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Post_a_message_(V3)": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "body": {
                            "content": "<p><span style=\"font-size: 14px\"><strong></strong></span><span style=\"font-size: 14px\"><strong>@{triggerBody()?['body']?['data']?['context']?['resourceName']}</strong></span><span style=\"font-size: 14px\"><strong><br>\n<br>\nAzure metric Alert<br>\n</strong></span><strong>Metric Name: </strong><strong>@{items('For_each')?['metricName']}</strong><strong></strong>@{items('For_each')?['operator']}@{items('For_each')?['threshold']}<strong><br>\n<br>\n</strong>@{triggerBody()?['body']?['data']?['context']?['portalLink']}<strong><br>\n<br>\n</strong>Current status of alert: <strong></strong>@{triggerBody()?['body']?['data']?['status']}</p>",
                            "contentType": "html"
                          }
                        },
                        "path": "/v3/beta/teams/@{encodeURIComponent('7d81e64e-b159-4b4e-8619-a91a5b1f4fca')}/channels/@{encodeURIComponent('19:0c8be18da04046daa403c9da4d2361a6@thread.skype')}/messages"
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {},
                  "else": {
                    "actions": {
                      "Post_a_message_(V3)_2": {
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['teams']['connectionId']"
                            }
                          },
                          "method": "post",
                          "body": {
                            "body": {
                              "content": "<p><span style=\"font-size: 14px; font-family: arial\"><strong>Unrecognized alert message:</strong></span><br>\n@{json(triggerBody())}</p>",
                              "contentType": "html"
                            }
                          },
                          "path": "/v3/beta/teams/@{encodeURIComponent('7d81e64e-b159-4b4e-8619-a91a5b1f4fca')}/channels/@{encodeURIComponent('19:0c8be18da04046daa403c9da4d2361a6@thread.skype')}/messages"
                        },
                        "runAfter": {}
                      }
                    }
                  }
                }
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "headers": {
                      "type": "object",
                      "properties": {
                        "Connection": {
                          "type": "string"
                        },
                        "Expect": {
                          "type": "string"
                        },
                        "Host": {
                          "type": "string"
                        },
                        "User-Agent": {
                          "type": "string"
                        },
                        "X-CorrelationContext": {
                          "type": "string"
                        },
                        "Content-Length": {
                          "type": "string"
                        },
                        "Content-Type": {
                          "type": "string"
                        }
                      }
                    },
                    "body": {
                      "type": "object",
                      "properties": {
                        "schemaId": {
                          "type": "string"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "version": {
                              "type": "string"
                            },
                            "properties": {},
                            "status": {
                              "type": "string"
                            },
                            "context": {
                              "type": "object",
                              "properties": {
                                "timestamp": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "conditionType": {
                                  "type": "string"
                                },
                                "severity": {
                                  "type": "string"
                                },
                                "condition": {
                                  "type": "object",
                                  "properties": {
                                    "windowSize": {
                                      "type": "string"
                                    },
                                    "allOf": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metricName": {
                                            "type": "string"
                                          },
                                          "metricNamespace": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "type": "string"
                                          },
                                          "threshold": {
                                            "type": "string"
                                          },
                                          "timeAggregation": {
                                            "type": "string"
                                          },
                                          "dimensions": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "value"
                                              ]
                                            }
                                          },
                                          "metricValue": {
                                            "type": "integer"
                                          },
                                          "webTestName": {}
                                        },
                                        "required": [
                                          "metricName",
                                          "metricNamespace",
                                          "operator",
                                          "threshold",
                                          "timeAggregation",
                                          "dimensions",
                                          "metricValue",
                                          "webTestName"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "subscriptionId": {
                                  "type": "string"
                                },
                                "resourceGroupName": {
                                  "type": "string"
                                },
                                "resourceName": {
                                  "type": "string"
                                },
                                "resourceType": {
                                  "type": "string"
                                },
                                "resourceId": {
                                  "type": "string"
                                },
                                "portalLink": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "teams": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'teams')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('ConnectionName'))]",
                "connectionName": "[parameters('ConnectionName')]"
              }
            }
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2017-05-01-preview",
          "type": "providers/diagnosticSettings",
          "name": "diagnpsticSetings",
          "properties": {
            "workspaceId": "[variables('omsWorkspaceResourceId')]",
            "metrics": [
              {
                "timeGrain": "AllMetrics",
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ],
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          },
          "identity": null,
          "dependsOn": [
            "[concat('Microsoft.Logic/workflows/', parameters('logicAppName'))]"
          ]
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('ConnectionName'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('ConnectionName')]",
      "location": "[parameters('LogicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('LogicAppLocation'), '/managedApis/', 'teams')]"
        },
        "displayName": "[parameters('ConnectionDisplayName')]",
        "nonSecretParameterValues": {
          "token:TenantId": "[parameters('ConnectiontokenTenantId')]"
        }
      }
    }
  ],
  "outputs": {}
}